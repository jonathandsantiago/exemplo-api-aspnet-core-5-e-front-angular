// <auto-generated />
using System;
using FavoDeMel.Repository.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FavoDeMel.Repository.Migrations
{
    [DbContext(typeof(FavoDeMelDbContext))]
    partial class FavoDeMelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Comandas.Comanda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ComandaId");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("GarcomId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("GorjetaGarcom")
                        .HasColumnType("numeric");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAPagar")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("GarcomId");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Comandas.ComandaPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ComandaPedidoId");

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ComandaPedido");
                });

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Produtos.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("UsuarioId");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Comissao")
                        .HasColumnType("numeric");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Perfil")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Comandas.Comanda", b =>
                {
                    b.HasOne("FavoDeMel.Domain.Entities.Usuarios.Usuario", "Garcom")
                        .WithMany()
                        .HasForeignKey("GarcomId");

                    b.Navigation("Garcom");
                });

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Comandas.ComandaPedido", b =>
                {
                    b.HasOne("FavoDeMel.Domain.Entities.Comandas.Comanda", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FavoDeMel.Domain.Entities.Produtos.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("FavoDeMel.Domain.Entities.Comandas.Comanda", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
